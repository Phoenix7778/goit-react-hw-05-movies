{"version":3,"file":"static/js/452.ac41a34d.chunk.js","mappings":"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","sources":["api/Api.js","pages/home/Home.styled.js","components/search/SearchBar.jsx","pages/movies/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = '00ba8a5ee4008ed802556206b4b247b2';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\n\nexport const getTrending = async () => {\n  const response = await axios.get(`trending/movie/day?api_key=${API_KEY}`);\n  return response.data;\n};\n\nexport const searchMovies = async query => {\n  const response = await axios.get(\n    `search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n  );\n  return response.data;\n};\n\nexport const getMovieDetails = async id => {\n  const response = await axios.get(\n    `movie/${id}?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getMovieCredits = async id => {\n  const response = await axios.get(\n    `movie/${id}/credits?api_key=${API_KEY}&language=en-US`\n  );\n  return response.data;\n};\n\nexport const getReviews = async id => {\n  const response = await axios.get(\n    `movie/${id}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n  );\n  return response.data;\n};\n","import { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const MovieLink = styled(Link)`\n  text-decoration: none;\n  padding: 2px 8px;\n  color: black;\n  &:hover {\n    color: blue;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { BsSearch } from 'react-icons/bs';\n\nconst SearchForm = ({ onSubmit, children }) => (\n  <form\n    style={{\n      maxWidth: '300px',\n      padding: '4px',\n    }}\n    onSubmit={onSubmit}\n  >\n    {children}\n  </form>\n);\n\nconst SearchInput = () => (\n  <input\n    type=\"text\"\n    name=\"movieName\"\n    pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n    title=\"May contain only letters, apostrophe, dash and spaces. For example moon\"\n    required\n    autoComplete=\"off\"\n    autoFocus\n    placeholder=\"Search movie...\"\n  />\n);\n\nexport const SearchBar = ({ onSubmit }) => (\n  <div\n    style={{\n      display: 'flex',\n      justifyContent: 'center',\n    }}\n  >\n    <SearchForm onSubmit={onSubmit}>\n      <SearchInput />\n      <button\n        style={{\n          display: 'flex',\n          alignItems: 'center',\n          backgroundColor: 'inherit',\n          width: '30px',\n          height: '30px',\n          border: '0',\n          marginRight: '4px',\n          marginLeft: '4px',\n          cursor: 'pointer',\n          outline: 'none',\n        }}\n        type=\"submit\"\n        aria-label=\"search button\"\n      >\n        <BsSearch />\n      </button>\n    </SearchForm>\n  </div>\n);\n\nSearchBar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nSearchForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { useSearchParams, useLocation } from 'react-router-dom';\nimport { searchMovies } from './../../api/Api';\nimport { Loader } from '../../components/loader/Loader';\nimport { SearchBar } from '../../components/search/SearchBar';\nimport { MovieLink } from 'pages/home/Home.styled';\n\nexport const Movies = () => {\n  const location = useLocation();\n  const [searchParams, setSearchParams] = useSearchParams();\n  const movieName = searchParams.get('movieName') ?? '';\n  const [moviesList, setMoviesList] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    if (movieName === '') {\n      return;\n    }\n    setMoviesList([]);\n    setIsLoading(true);\n\n    searchMovies(movieName).then(data => {\n      if (!data.results.length) {\n        setIsLoading(false);\n        setError(true);\n        return console.log('No results found');\n      }\n      setError(false);\n      setMoviesList(data.results);\n      setIsLoading(false);\n    });\n  }, [movieName]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const searchForm = e.currentTarget;\n    setSearchParams({ movieName: searchForm.elements.movieName.value });\n    searchForm.reset();\n  };\n\n  return (\n    <main>\n      <SearchBar onSubmit={handleSubmit} />\n      {error && (\n        <p\n          style={{\n            textAlign: 'center',\n          }}\n        >\n          There is no movies with this request. Please, try again\n        </p>\n      )}\n      <ul\n        style={{\n          textAlign: 'center',\n          display: 'flex',\n          flexDirection: 'column',\n          rowGap: '10px',\n          justifyContent: 'center',\n          marginRight: 'auto',\n          marginLeft: 'auto',\n          padding: '0',\n        }}\n      >\n        {moviesList.map(movie => {\n          return (\n            <li key={movie.id}>\n              <MovieLink to={`/movies/${movie.id}`} state={{ from: location }}>\n                {movie.original_title || movie.name}\n              </MovieLink>\n            </li>\n          );\n        })}\n        {isLoading && <Loader />}\n      </ul>\n    </main>\n  );\n};\n"],"names":["API_KEY","axios","getTrending","response","data","searchMovies","query","getMovieDetails","id","getMovieCredits","getReviews","MovieLink","styled","Link","SearchForm","onSubmit","children","style","maxWidth","padding","SearchInput","type","name","pattern","title","required","autoComplete","autoFocus","placeholder","SearchBar","display","justifyContent","alignItems","backgroundColor","width","height","border","marginRight","marginLeft","cursor","outline","Movies","location","useLocation","useSearchParams","searchParams","setSearchParams","movieName","get","useState","moviesList","setMoviesList","isLoading","setIsLoading","error","setError","useEffect","then","results","length","console","log","e","preventDefault","searchForm","currentTarget","elements","value","reset","textAlign","flexDirection","rowGap","map","movie","to","state","from","original_title","Loader"],"sourceRoot":""}